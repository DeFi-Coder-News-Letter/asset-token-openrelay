version: 2
jobs:
  node_build_and_test:
    docker:
      - image: circleci/node:8
        environment:
          AWS_ACCESS_KEY_ID: placeholder
          AWS_SECRET_ACCESS_KEY: placeholder
          AWS_DEFAULT_REGION: us-east-1
      - image: redis
    steps:
      - checkout
      - run: npm install
      - run: make mock
      - run: make nodesetup
  golang_build_delayrelay:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/delayrelay
      - persist_to_workspace:
          root: bin
          paths:
            - delayrelay
  golang_build_fundcheckrelay:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/fundcheckrelay
      - persist_to_workspace:
          root: bin
          paths:
            - fundcheckrelay
  golang_build_getbalance:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/getbalance
      - persist_to_workspace:
          root: bin
          paths:
            - getbalance
  golang_build_ingest:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/ingest
      - persist_to_workspace:
          root: bin
          paths:
            - ingest
  golang_build_initialize:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/initialize
      - persist_to_workspace:
          root: bin
          paths:
            - initialize
  golang_build_simplerelay:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/simplerelay
      - persist_to_workspace:
          root: bin
          paths:
            - simplerelay
  golang_build_validateorder:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/validateorder
      - persist_to_workspace:
          root: bin
          paths:
            - validateorder
  golang_build_fillupdate:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/fillupdate
      - persist_to_workspace:
          root: bin
          paths:
            - fillupdate
  golang_build_indexer:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/indexer
      - persist_to_workspace:
          root: bin
          paths:
            - indexer
  golang_build_fillindexer:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/fillindexer
      - persist_to_workspace:
          root: bin
          paths:
            - fillindexer
  golang_build_exchangesplitter:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/exchangesplitter
      - persist_to_workspace:
          root: bin
          paths:
            - exchangesplitter
  golang_build_automigrate:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/automigrate
      - persist_to_workspace:
          root: bin
          paths:
            - automigrate
  golang_build_searchapi:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/searchapi
      - persist_to_workspace:
          root: bin
          paths:
            - searchapi
  golang_build_blockmonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/blockmonitor
      - persist_to_workspace:
          root: bin
          paths:
            - blockmonitor
  golang_build_allowancemonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/allowancemonitor
      - persist_to_workspace:
          root: bin
          paths:
            - allowancemonitor
  golang_build_erc721approvalmonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/erc721approvalmonitor
      - persist_to_workspace:
          root: bin
          paths:
            - erc721approvalmonitor
  golang_build_spendmonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/spendmonitor
      - persist_to_workspace:
          root: bin
          paths:
            - spendmonitor
  golang_build_spendrecorder:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/spendrecorder
      - persist_to_workspace:
          root: bin
          paths:
            - spendrecorder
  golang_build_fillmonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/fillmonitor
      - persist_to_workspace:
          root: bin
          paths:
            - fillmonitor
  golang_build_multisigmonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/multisigmonitor
      - persist_to_workspace:
          root: bin
          paths:
            - multisigmonitor
  golang_build_canceluptomonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/canceluptomonitor
      - persist_to_workspace:
          root: bin
          paths:
            - canceluptomonitor
  golang_build_canceluptofilter:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/canceluptofilter
      - persist_to_workspace:
          root: bin
          paths:
            - canceluptofilter
  golang_build_canceluptoindexer:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/canceluptoindexer
      - persist_to_workspace:
          root: bin
          paths:
            - canceluptoindexer
  golang_build_queuemonitor:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: make bin/queuemonitor
      - persist_to_workspace:
          root: bin
          paths:
            - queuemonitor
  golang_test:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.8
        environment:
          AWS_ACCESS_KEY_ID: placeholder
          AWS_SECRET_ACCESS_KEY: placeholder
          AWS_DEFAULT_REGION: us-east-1
      - image: postgres
        environment:
          POSTGRES_PASSWORD: secret
      - image: redis
      - image: cnadiminti/dynamodb-local
    steps:
      - checkout
      - attach_workspace:
          at: bin
      - run: make mock
      - run: make gotest
  docker_build_deploy:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.8
        #  TODO: Add the following environment variables if you wish to upload to AWS
        #  -  AWS_ACCESS_KEY_ID
        #  -  AWS_SECRET_ACCESS_KEY
        #  -  AWS_DEFAULT_REGION
    steps:
      - checkout
      - attach_workspace:
          at: bin
          # TODO: Configure CircleCi credentials in circleci
      - setup_remote_docker
      - run: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run : sudo apt-get install python-yaml
      - run: docker build -t corebuild:latest -f Dockerfile.cibase .
      # TODO: Make sure to change this when you update the default docker-compose file
      - run: docker-compose -f docker-compose-testrpc.yml up  -d
      - run: bash docker-cfg/retag.sh ./docker-compose-testrpc.yml latest $(echo "$CIRCLE_BRANCH" | sed 's^/^-^g')
      - run: bash docker-cfg/retag.sh ./docker-compose-testrpc.yml latest $(echo "$CIRCLE_BRANCH" | sed 's^/^-^g')_$CIRCLE_SHA1
      - run: bash docker-cfg/retag.sh ./docker-compose-testrpc.yml latest $CIRCLE_SHA1
      # TODO: Docker does not support '/' and other characters. This is a dirty workaround for the '/' naming convention being used currently
      - run: TAG=$(echo "$CIRCLE_BRANCH" | sed 's^/^-^g') docker-compose -f docker-compose-testrpc.yml push --ignore-push-failures
      - run: TAG=$CIRCLE_SHA1 docker-compose -f docker-compose-testrpc.yml push --ignore-push-failures
      - run: TAG=$(echo "$CIRCLE_BRANCH" | sed 's^/^-^g')_$CIRCLE_SHA1 docker-compose -f docker-compose-testrpc.yml push --ignore-push-failures
      - run: |
          [[ CIRCLE_BRANCH = 'master' ]] && docker-compose -f docker-compose-testrpc.yml push --ignore-push-failures || true
workflows:
  version: 2
  build_and_test:
    jobs:
      - node_build_and_test
      - golang_build_delayrelay
      - golang_build_fundcheckrelay
      - golang_build_getbalance
      - golang_build_ingest
      - golang_build_initialize
      - golang_build_simplerelay
      - golang_build_validateorder
      - golang_build_fillupdate
      - golang_build_indexer
      - golang_build_fillindexer
      - golang_build_exchangesplitter
      - golang_build_automigrate
      - golang_build_searchapi
      - golang_build_blockmonitor
      - golang_build_allowancemonitor
      - golang_build_erc721approvalmonitor
      - golang_build_spendmonitor
      - golang_build_spendrecorder
      - golang_build_fillmonitor
      - golang_build_multisigmonitor
      - golang_build_canceluptomonitor
      - golang_build_canceluptofilter
      - golang_build_canceluptoindexer
      - golang_build_queuemonitor
      - golang_test
      - docker_build_deploy:
          requires:
            - golang_test
            - golang_build_delayrelay
            - golang_build_fundcheckrelay
            - golang_build_getbalance
            - golang_build_ingest
            - golang_build_initialize
            - golang_build_simplerelay
            - golang_build_validateorder
            - golang_build_fillupdate
            - golang_build_indexer
            - golang_build_fillindexer
            - golang_build_exchangesplitter
            - golang_build_automigrate
            - golang_build_searchapi
            - golang_build_blockmonitor
            - golang_build_allowancemonitor
            - golang_build_erc721approvalmonitor
            - golang_build_spendmonitor
            - golang_build_spendrecorder
            - golang_build_fillmonitor
            - golang_build_multisigmonitor
            - golang_build_canceluptomonitor
            - golang_build_canceluptofilter
            - golang_build_canceluptoindexer
            - golang_build_queuemonitor
          filters:
            branches:
              only:
                - master
                - support/0xv1
                - support/0xv2
                - docker-push
